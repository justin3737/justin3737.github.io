{"version":3,"sources":["webpack:///./src/components/ListItem/list-comp.js","webpack:///./src/components/ListItem/List.js","webpack:///./src/components/ListItem/index.js","webpack:///./src/utils/helper.js","webpack:///./src/components/TagText/tag-comp.js","webpack:///./src/components/TagText/index.js","webpack:///./src/components/Layout/index.js","webpack:///./src/containers/Tags/tag-comp.js","webpack:///./src/containers/Tags/index.js","webpack:///./src/components/TagList/taglist-comp.js","webpack:///./src/components/TagList/index.js","webpack:///./src/pages/tags/[tags].js"],"names":["ListTitle","styled","div","ListItemWrap","ListItemsWrap","ListDate","time","ListItemTitle","h6","ListLink","a","List","render","this","props","data","slug","frontmatter","date","title","tags","link","href","map","item","id","TagText","key","to","React","Component","defaultProps","ListItem","str","dataArray","subject","filterType","Fragment","slice","toUpperCase","toLowerCase","includes","node","span","Layout","location","children","Date","getFullYear","TagCtnWrap","TagsContainer","tagName","ListUL","ul","ListLI","li","TagList","listArray","staticProps","PropTypes","array","IndexPage","allMdx","edges","tagArrs","oriTagArr","forEach","it","push","noRepectTagArr","Array","from","Set","SEO","keywords","Tags"],"mappings":"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","file":"component---src-pages-[tags]-tags-js-83cccca91f6dbf5e2e36.js","sourcesContent":["import styled from \"styled-components\"\n\nexport const ListTitle = styled.div`\n  color: #363636;\n  font-size: 1.5rem;\n  font-weight: 400;\n  line-height: 1.125;\n  margin: 0 0 0.8em;\n  padding: 0;\n  word-break: break-word;\n  margin-top: 3rem;\n\n  &:first-child {\n    margin-top: 0rem;\n  }\n`\n\nexport const ListItemWrap = styled.div`\n  border-left: 1px solid #dbdbdb;\n`\n\nexport const ListItemsWrap = styled.div`\n  border-left: 3px solid transparent;\n  border-top-style: none;\n  color: #4a4a4a;\n  font-size: 17.6px;\n  line-height: 26.4px;\n  margin-bottom: 0;\n  margin-left: -1px;\n  padding: 0.5rem 1.5rem;\n\n  &:hover {\n    border-left-color: black;\n    cursor: pointer;\n  }\n`\n\nexport const ListDate = styled.time`\n  color: #888;\n  font-family: monospace;\n  font-size: 0.9rem;\n  line-height: 21.6px;\n  margin-right: 1rem;\n`\n\nexport const ListItemTitle = styled.h6`\n  color: #363636;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.125;\n  margin: 0;\n  padding: 0;\n  word-break: break-word;\n`\nexport const ListLink = styled.a`\n  display: inline-block;\n  width: 100%;\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nimport {\n  ListItemsWrap,\n  ListDate,\n  ListItemTitle,\n  ListLink,\n} from \"./list-comp\"\nimport TagText from \"@components/TagText\"\n\nclass List extends React.Component {\n  static propTypes = {\n    tagName: PropTypes.string,\n  }\n  static defaultProps = {\n    data: {},\n  }\n  render() {\n    const { slug, frontmatter } = this.props.data\n    const { date, title, tags } = frontmatter\n    const link = `/blog/${slug}`\n    return (\n      <ListItemsWrap>\n        <ListDate>{date}</ListDate>\n        <ListItemTitle>\n          <ListLink href={link}>{title}</ListLink>\n        </ListItemTitle>\n        {tags.map((item, id) => {\n          return (\n            <TagText key={id}>\n              <Link to={`/tags/${item}`}>#{item}</Link>\n            </TagText>\n          )\n        })}\n      </ListItemsWrap>\n    )\n  }\n}\n\nexport default List\n\n/*\n{\n  \"slug\": \"mountainholic-3/\",\n  \"frontmatter\": {\n    \"title\": \"Mountainholic Part III - 在山上游牧\",\n    \"date\": \"2021-03-12\",\n    \"categories\": \"mountain\",\n    \"tags\": [\"photography\", \"x70\", \"xt1\", \"fuji\"]\n  }\n}\n*/\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport List from \"./List\"\nimport { ListTitle, ListItemWrap } from \"./list-comp\"\nimport { titleCase } from \"src/utils/helper\"\n\nclass ListItem extends React.Component {\n  static propTypes = {\n    dataArray: PropTypes.array,\n    subject: PropTypes.string,\n    filterType: PropTypes.string,\n  }\n  static defaultProps = {\n    dataArray: [],\n    subject: \"\", // tag name or category name\n    filterType: \"tags\", //\"tags\" or \"categories\"\n  }\n  render() {\n    const { dataArray, subject, filterType } = this.props\n    return (\n      <React.Fragment>\n        <ListTitle>\n          {filterType === \"tags\" ? `#${subject}` : titleCase(subject)}\n        </ListTitle>\n        <ListItemWrap>\n          {dataArray.map((item, id) => {\n            if (\n              (filterType === \"categories\" &&\n                subject.includes(item.node.frontmatter[filterType])) ||\n              (filterType === \"tags\" &&\n                subject.includes(item.node.frontmatter[filterType]) !== -1)\n            )\n              return <List key={id} data={item.node} />\n          })}\n        </ListItemWrap>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default ListItem\n","export const titleCase = str => str.slice(0, 1).toUpperCase() + str.slice(1).toLowerCase()\n","import styled from \"styled-components\"\n\nexport const TagText = styled.span`\n  color: #888;\n  font-size: 0.9rem;\n  line-height: 21.6px;\n  margin-right: 0.4rem;\n\n  & a:hover {\n    text-decoration: underline;\n  }\n\n  &:after {\n    content: \"、\";\n  }\n`","import { TagText } from \"./tag-comp\"\n\nexport default TagText\n","import React from \"react\"\nimport Header from \"src/components/Header\"\nimport { GlobalStyle, Wrapper, Footer } from \"./layout-comp\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    return (\n      <>\n        <GlobalStyle />\n        <Wrapper>\n          <Header title={title} location={location} />\n          <main>{children}</main>\n          <Footer>\n            © Justin {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </Footer>\n        </Wrapper>\n      </>\n    )\n  }\n}\n\nexport default Layout\n","import styled from \"styled-components\"\n\nexport const TagCtnWrap = styled.div`\n  padding: 84px 2rem 2rem;\n`","import React, { Component } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { TagCtnWrap } from \"./tag-comp\"\nimport ListItem from \"src/components/ListItem\"\n\nclass TagsContainer extends Component {\n  static propTypes = {\n    dataArray: PropTypes.array,\n    tagName: PropTypes.string,\n  }\n  static defaultProps = {\n    dataArray: [],\n    tagName: \"\",\n  }\n  render() {\n    const { dataArray, tagName } = this.props\n    return (\n      <TagCtnWrap>\n        <ListItem dataArray={dataArray} subject={tagName} />\n      </TagCtnWrap>\n    )\n  }\n}\n\nexport default TagsContainer\n","import styled from \"styled-components\"\n\nexport const ListUL = styled.ul`\n  margin: 0 2rem 2rem;\n  list-style: none;\n`\n\nexport const ListLI = styled.li`\n  display: inline-block;\n  border: 2px solid #ccc;\n  margin-right: 0.5rem;\n  margin-bottom: 0.5rem;\n\n  &:hover {\n    border: 2px solid #777;\n    cursor: pointer;\n  }\n  a {\n    padding: 0.4rem 0.7rem;\n    display: inline-block;\n  }\n\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { ListUL, ListLI } from \"./taglist-comp\"\nimport { Link } from \"gatsby\"\n\nclass TagList extends React.Component {\n  static staticProps = {\n    listArray: PropTypes.array,\n  }\n  static defaultProps = {\n    listArray: [],\n  }\n  render() {\n    const { listArray } = this.props\n    return (\n      <>\n        <ListUL>\n          {listArray.map((item, id) => {\n            return <ListLI key={id}><Link to={`/tags/${item}`}>#{item}</Link></ListLI>\n          })}\n        </ListUL>\n      </>\n    )\n  }\n}\n\nexport default TagList\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport TagsContainer from \"@containers/Tags\"\nimport Layout from \"@components/Layout\"\nimport SEO from \"@components/SEO\"\nimport TagList from \"@components/TagList\"\n\nclass IndexPage extends React.Component {\n  render() {\n    const { location, tags, data } = this.props\n    const siteTitle = \"CHASING LIGHTS AND SHADOWS\"\n    const dataArray = data.allMdx.edges\n    let tagArrs = []\n    let oriTagArr = []\n    dataArray.forEach(item => {\n      let tagArr = item.node.frontmatter.tags\n      tagArr.forEach(it => {\n        oriTagArr.push(it)\n        if (tags === it) tagArrs.push(item)\n      })\n    })\n    const noRepectTagArr = Array.from(new Set(oriTagArr))\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO\n          title=\"Home\"\n          keywords={[\n            `mountain`,\n            `life`,\n            `photography`,\n            `blog`,\n            `gatsby`,\n            `javascript`,\n            `react`,\n            `js`,\n          ]}\n        />\n        <TagsContainer dataArray={tagArrs} tagName={tags}/>\n        <TagList listArray={noRepectTagArr}/>\n      </Layout>\n    )\n  }\n}\n\nexport const query = graphql`\n  query {\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          slug\n          frontmatter {\n            title\n            date\n            tags\n            categories\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n"],"sourceRoot":""}