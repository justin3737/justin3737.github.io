{"version":3,"sources":["webpack:///./src/containers/Catagoris/cata-comp.js","webpack:///./src/components/CataList/catalist-comp.js","webpack:///./src/components/CataList/CataItem.js","webpack:///./src/components/CataList/index.js","webpack:///./src/utils/helper.js","webpack:///./src/containers/Catagoris/index.js","webpack:///./src/components/Layout/index.js","webpack:///./src/pages/catagoris.js"],"names":["CataWrap","styled","div","CataTitle","CataItemWrap","ListItemsWrap","ListDate","time","ListItemTitle","h6","ListLink","a","CataList","render","this","props","data","slug","frontmatter","date","title","link","href","React","Component","defaultProps","dataArray","subject","oriCataArr","map","itam","node","catagories","noRepectCataArr","Array","from","Set","index","key","str","slice","toUpperCase","toLowerCase","item","id","CataItem","CataContainer","tagName","children","Layout","location","Date","getFullYear","IndexPage","keywords","allMdx","edges"],"mappings":"+IAEaA,EAAWC,IAAOC,IAAV,0EAAGD,CAAH,6BCARE,EAAYF,IAAOC,IAAV,+EAAGD,CAAH,uKAeTG,EAAeH,IAAOC,IAAV,kFAAGD,CAAH,oCAIZI,EAAgBJ,IAAOC,IAAV,mFAAGD,CAAH,uNAgBbK,EAAWL,IAAOM,KAAV,8EAAGN,CAAH,6FAQRO,EAAgBP,IAAOQ,GAAV,mFAAGR,CAAH,8GASbS,EAAWT,IAAOU,EAAV,8EAAGV,CAAH,sCC9CfW,E,kGAOJC,OAAA,WACE,MAA8BC,KAAKC,MAAMC,KAAjCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,YACNC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACRC,EAAI,SAAYJ,EACtB,OACE,kBAACZ,EAAD,KACE,kBAACC,EAAD,KAAWa,GACX,kBAACX,EAAD,KACE,kBAACE,EAAD,CAAUY,KAAMD,GAAOD,M,GAfVG,IAAMC,WAAvBZ,EAIGa,aAAe,CACpBT,KAAM,IAiBKJ,QCzBTA,E,kGASJC,OAAA,WACE,MAA+BC,KAAKC,MAA5BW,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QACbC,EAAaF,EAAUG,KAAI,SAAAC,GAC/B,OAAOA,EAAKC,KAAKb,YAAYc,cAEzBC,EAAkBC,MAAMC,KAAK,IAAIC,IAAIR,IAC3C,OACE,oCACGK,EAAgBJ,KAAI,SAACT,EAAOiB,GAC3B,OACE,oCACE,kBAAClC,EAAD,CAAWmC,IAAKD,GAASV,EAAD,IAAeA,GCzB5BY,EDyBiDnB,GCzBtCoB,MAAM,EAAG,GAAGC,cAAgBF,EAAIC,MAAM,GAAGE,eD0B/D,kBAACtC,EAAD,CAAckC,IAAKD,GAChBX,EAAUG,KAAI,SAACc,EAAMC,GACpB,GAAIxB,IAAUuB,EAAKZ,KAAKb,YAAYc,WAClC,OAAO,kBAACa,EAAD,CAAUP,IAAKM,EAAI5B,KAAM2B,EAAKZ,YC7BhC,IAAAQ,O,GDKFhB,IAAMC,WAAvBZ,EAKGa,aAAe,CACpBC,UAAW,GACXC,QAAS,IA4BEf,QEnCTkC,E,kGASJjC,OAAA,WACE,MAAyCC,KAAKC,MAAtCW,EAAR,EAAQA,UAAWqB,EAAnB,EAAmBA,QAAnB,EAA4BC,SAC5B,OACE,kBAAChD,EAAD,KACE,kBAAC,EAAD,CAAU0B,UAAWA,EAAWC,QAASoB,M,GAbrBvB,aAAtBsB,EAKGrB,aAAe,CACpBC,UAAW,GACXqB,QAAS,IAYED,O,+FCpBTG,E,kGACJpC,OAAA,WACE,MAAsCC,KAAKC,MAAnCmC,EAAR,EAAQA,SAAU9B,EAAlB,EAAkBA,MAAO4B,EAAzB,EAAyBA,SACzB,OACE,oCACE,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ5B,MAAOA,EAAO8B,SAAUA,IAChC,8BAAOF,GACP,kBAAC,IAAD,kBACY,IAAIG,MAAOC,cADvB,mBAGE,uBAAG9B,KAAK,4BAAR,c,GAZSC,IAAMC,WAoBZyB,O,kHCjBTI,E,kGACJxC,OAAA,WACE,MAA2BC,KAAKC,MAAxBC,EAAR,EAAQA,KAAMkC,EAAd,EAAcA,SAEd,OACE,kBAAC,IAAD,CAAQA,SAAUA,EAAU9B,MAFZ,8BAGd,kBAAC,IAAD,CACEA,MAAM,OACNkC,SAAU,CAAC,WAAD,kEAWZ,kBAAC,IAAD,CAAW5B,UAAWV,EAAKuC,OAAOC,U,GAnBlBjC,IAAMC,WA0Cf6B","file":"component---src-pages-catagoris-js-17f6bb8918cbd2b95750.js","sourcesContent":["import styled from \"styled-components\"\n\nexport const CataWrap = styled.div`\n  padding: 84px 2rem 2rem;\n`","import styled from \"styled-components\"\n\nexport const CataTitle = styled.div`\n  color: #363636;\n  font-size: 1.5rem;\n  font-weight: 400;\n  line-height: 1.125;\n  margin: 0 0 0.8em;\n  padding: 0;\n  word-break: break-word;\n  margin-top: 3rem;\n\n  &:first-child {\n    margin-top: 0rem;\n  }\n`\n\nexport const CataItemWrap = styled.div`\n  border-left: 1px solid #dbdbdb;\n`\n\nexport const ListItemsWrap = styled.div`\n  border-left: 3px solid transparent;\n  border-top-style: none;\n  color: #4a4a4a;\n  font-size: 17.6px;\n  line-height: 26.4px;\n  margin-bottom: 0;\n  margin-left: -1px;\n  padding: 0.5rem 1.5rem;\n\n  &:hover {\n    border-left-color: black;\n    cursor: pointer;\n  }\n`\n\nexport const ListDate = styled.time`\n  color: #888;\n  font-family: monospace;\n  font-size: 0.9rem;\n  line-height: 21.6px;\n  margin-right: 1rem;\n`\n\nexport const ListItemTitle = styled.h6`\n  color: #363636;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.125;\n  margin: 0;\n  padding: 0;\n  word-break: break-word;\n`\nexport const ListLink = styled.a`\n  display: inline-block;\n  width: 100%;\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport {\n  ListItemsWrap,\n  ListDate,\n  ListItemTitle,\n  ListLink,\n} from \"./catalist-comp\"\nclass CataList extends React.Component {\n  static propTypes = {\n    tagName: PropTypes.string\n  }\n  static defaultProps = {\n    data: {}\n  }\n  render() {\n    const { slug, frontmatter } = this.props.data\n    const { date, title } = frontmatter\n    const link = `/blog/${slug}`\n    return (\n      <ListItemsWrap>\n        <ListDate>{date}</ListDate>\n        <ListItemTitle>\n          <ListLink href={link}>{title}</ListLink>\n        </ListItemTitle>\n      </ListItemsWrap>\n    )\n  }\n}\n\nexport default CataList\n\n/*\n{\n  \"slug\": \"mountainholic-3/\",\n  \"frontmatter\": {\n    \"title\": \"Mountainholic Part III - 在山上游牧\",\n    \"date\": \"2021-03-12\",\n    \"catagories\": \"mountain\"\n  }\n}\n*/\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport CataItem from \"./CataItem\"\nimport { titleCase } from \"src/utils/helper\"\nimport { CataTitle, CataItemWrap } from \"./catalist-comp\"\nclass CataList extends React.Component {\n  static propTypes = {\n    dataArray: PropTypes.array,\n    subject: PropTypes.string\n  }\n  static defaultProps = {\n    dataArray: [],\n    subject: ''\n  }\n  render() {\n    const { dataArray, subject } = this.props\n    const oriCataArr = dataArray.map(itam => {\n      return itam.node.frontmatter.catagories\n    })\n    const noRepectCataArr = Array.from(new Set(oriCataArr))\n    return (\n      <>\n        {noRepectCataArr.map((title, index) => {\n          return (\n            <>\n              <CataTitle key={index}>{(subject)? `#${subject}`: titleCase(title)}</CataTitle>\n              <CataItemWrap key={index}>\n                {dataArray.map((item, id) => {\n                  if (title === item.node.frontmatter.catagories)\n                    return <CataItem key={id} data={item.node} />\n                })}\n              </CataItemWrap>\n            </>\n          )\n        })}\n      </>\n    )\n  }\n}\n\nexport default CataList\n","export const titleCase = str => str.slice(0, 1).toUpperCase() + str.slice(1).toLowerCase()\n","import React, { Component } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { CataWrap } from \"./cata-comp\"\nimport CataList from \"src/components/CataList\"\n\nclass CataContainer extends Component {\n  static propTypes = {\n    dataArray: PropTypes.array,\n    tagName: PropTypes.string,\n  }\n  static defaultProps = {\n    dataArray: [],\n    tagName: \"\",\n  }\n  render() {\n    const { dataArray, tagName, children } = this.props\n    return (\n      <CataWrap>\n        <CataList dataArray={dataArray} subject={tagName} />\n      </CataWrap>\n    )\n  }\n}\n\nexport default CataContainer\n","import React from \"react\"\nimport Header from \"src/components/Header\"\nimport { GlobalStyle, Wrapper, Footer } from \"./layout-comp\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    return (\n      <>\n        <GlobalStyle />\n        <Wrapper>\n          <Header title={title} location={location} />\n          <main>{children}</main>\n          <Footer>\n            © Justin {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </Footer>\n        </Wrapper>\n      </>\n    )\n  }\n}\n\nexport default Layout\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"@components/Layout\"\nimport Catagoris from \"@containers/Catagoris\"\nimport SEO from \"@components/SEO\"\n\nclass IndexPage extends React.Component {\n  render() {\n    const { data, location } = this.props\n    const siteTitle = \"CHASING LIGHTS AND SHADOWS\"\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO\n          title=\"Home\"\n          keywords={[\n            `mountain`,\n            `life`,\n            `photography`,\n            `blog`,\n            `gatsby`,\n            `javascript`,\n            `react`,\n            `js`,\n          ]}\n        />\n        <Catagoris dataArray={data.allMdx.edges}/>\n      </Layout>\n    )\n  }\n}\n\nexport const query = graphql`\n  query {\n    allMdx(sort: {fields: [frontmatter___date], order: DESC}) {\n      edges {\n        node {\n          slug\n          frontmatter {\n            catagories\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n"],"sourceRoot":""}