{"version":3,"sources":["webpack:///./src/components/TagText/tag-comp.js","webpack:///./src/components/TagText/index.js","webpack:///./src/containers/Categoris/cate-comp.js","webpack:///./src/components/CateList/catelist-comp.js","webpack:///./src/components/CateList/CateItem.js","webpack:///./src/components/CateList/index.js","webpack:///./src/utils/helper.js","webpack:///./src/containers/Categoris/index.js","webpack:///./src/components/Layout/index.js","webpack:///./src/components/TagList/taglist-comp.js","webpack:///./src/components/TagList/index.js","webpack:///./src/pages/tags/[tags].js"],"names":["TagText","styled","span","CateWrap","div","CateTitle","CateItemWrap","ListItemsWrap","ListDate","time","ListItemTitle","h6","ListLink","a","CateList","render","this","props","data","slug","frontmatter","date","title","tags","link","href","map","item","id","key","to","React","Component","defaultProps","dataArray","subject","oriCateArr","itam","node","categories","noRepectCateArr","Array","from","Set","Fragment","index","str","slice","toUpperCase","toLowerCase","CateItem","CateContainer","tagName","Layout","location","children","Date","getFullYear","ListUL","ul","ListLI","li","TagList","listArray","staticProps","PropTypes","array","IndexPage","allMdx","edges","tagArrs","oriTagArr","forEach","it","push","noRepectTagArr","SEO","keywords","Categoris"],"mappings":"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","file":"component---src-pages-[tags]-tags-js-3e4b910aadad4da28106.js","sourcesContent":["import styled from \"styled-components\"\n\nexport const TagText = styled.span`\n  color: #888;\n  font-size: 0.9rem;\n  line-height: 21.6px;\n  margin-right: 0.4rem;\n\n  & a:hover {\n    text-decoration: underline;\n  }\n\n  &:after {\n    content: \"、\";\n  }\n`","import { TagText } from \"./tag-comp\"\n\nexport default TagText\n","import styled from \"styled-components\"\n\nexport const CateWrap = styled.div`\n  padding: 84px 2rem 2rem;\n`","import styled from \"styled-components\"\n\nexport const CateTitle = styled.div`\n  color: #363636;\n  font-size: 1.5rem;\n  font-weight: 400;\n  line-height: 1.125;\n  margin: 0 0 0.8em;\n  padding: 0;\n  word-break: break-word;\n  margin-top: 3rem;\n\n  &:first-child {\n    margin-top: 0rem;\n  }\n`\n\nexport const CateItemWrap = styled.div`\n  border-left: 1px solid #dbdbdb;\n`\n\nexport const ListItemsWrap = styled.div`\n  border-left: 3px solid transparent;\n  border-top-style: none;\n  color: #4a4a4a;\n  font-size: 17.6px;\n  line-height: 26.4px;\n  margin-bottom: 0;\n  margin-left: -1px;\n  padding: 0.5rem 1.5rem;\n\n  &:hover {\n    border-left-color: black;\n    cursor: pointer;\n  }\n`\n\nexport const ListDate = styled.time`\n  color: #888;\n  font-family: monospace;\n  font-size: 0.9rem;\n  line-height: 21.6px;\n  margin-right: 1rem;\n`\n\nexport const ListItemTitle = styled.h6`\n  color: #363636;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.125;\n  margin: 0;\n  padding: 0;\n  word-break: break-word;\n`\nexport const ListLink = styled.a`\n  display: inline-block;\n  width: 100%;\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\nimport {\n  ListItemsWrap,\n  ListDate,\n  ListItemTitle,\n  ListLink,\n} from \"./catelist-comp\"\nimport TagText from \"@components/TagText\"\nclass CateList extends React.Component {\n  static propTypes = {\n    tagName: PropTypes.string,\n  }\n  static defaultProps = {\n    data: {},\n  }\n  render() {\n    const { slug, frontmatter } = this.props.data\n    const { date, title, tags } = frontmatter\n    const link = `/blog/${slug}`\n    return (\n      <ListItemsWrap>\n        <ListDate>{date}</ListDate>\n        <ListItemTitle>\n          <ListLink href={link}>{title}</ListLink>\n        </ListItemTitle>\n        {tags.map((item, id) => {\n          return (\n            <TagText key={id}>\n              <Link to={`/tags/${item}`}>#{item}</Link>\n            </TagText>\n          )\n        })}\n      </ListItemsWrap>\n    )\n  }\n}\n\nexport default CateList\n\n/*\n{\n  \"slug\": \"mountainholic-3/\",\n  \"frontmatter\": {\n    \"title\": \"Mountainholic Part III - 在山上游牧\",\n    \"date\": \"2021-03-12\",\n    \"categories\": \"mountain\",\n    \"tags\": [\"photography\", \"x70\", \"xt1\", \"fuji\"]\n  }\n}\n*/\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport CateItem from \"./CateItem\"\nimport { titleCase } from \"src/utils/helper\"\nimport { CateTitle, CateItemWrap } from \"./catelist-comp\"\nclass CateList extends React.Component {\n  static propTypes = {\n    dataArray: PropTypes.array,\n    subject: PropTypes.string\n  }\n  static defaultProps = {\n    dataArray: [],\n    subject: ''\n  }\n  render() {\n    const { dataArray, subject } = this.props\n    const oriCateArr = dataArray.map(itam => {\n      return itam.node.frontmatter.categories\n    })\n    const noRepectCateArr = Array.from(new Set(oriCateArr))\n    return (\n      <React.Fragment>\n        {noRepectCateArr.map((title, index) => {\n          return (\n            <React.Fragment key={index}>\n              <CateTitle>{(subject)? `#${subject}`: titleCase(title)}</CateTitle>\n              <CateItemWrap>\n                {dataArray.map((item, id) => {\n                  if (title === item.node.frontmatter.categories)\n                    return <CateItem key={id} data={item.node} />\n                })}\n              </CateItemWrap>\n            </React.Fragment>\n          )\n        })}\n      </React.Fragment>\n    )\n  }\n}\n\nexport default CateList\n","export const titleCase = str => str.slice(0, 1).toUpperCase() + str.slice(1).toLowerCase()\n","import React, { Component } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { CateWrap } from \"./cate-comp\"\nimport CateList from \"src/components/CateList\"\n\nclass CateContainer extends Component {\n  static propTypes = {\n    dataArray: PropTypes.array,\n    tagName: PropTypes.string,\n  }\n  static defaultProps = {\n    dataArray: [],\n    tagName: \"\",\n  }\n  render() {\n    const { dataArray, tagName } = this.props\n    return (\n      <CateWrap>\n        <CateList dataArray={dataArray} subject={tagName} />\n      </CateWrap>\n    )\n  }\n}\n\nexport default CateContainer\n","import React from \"react\"\nimport Header from \"src/components/Header\"\nimport { GlobalStyle, Wrapper, Footer } from \"./layout-comp\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    return (\n      <>\n        <GlobalStyle />\n        <Wrapper>\n          <Header title={title} location={location} />\n          <main>{children}</main>\n          <Footer>\n            © Justin {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </Footer>\n        </Wrapper>\n      </>\n    )\n  }\n}\n\nexport default Layout\n","import styled from \"styled-components\"\n\nexport const ListUL = styled.ul`\n  margin: 0 2rem 2rem;\n  list-style: none;\n`\n\nexport const ListLI = styled.li`\n  display: inline-block;\n  border: 2px solid #ccc;\n  margin-right: 0.5rem;\n  margin-bottom: 0.5rem;\n\n  &:hover {\n    border: 2px solid #777;\n    cursor: pointer;\n  }\n  a {\n    padding: 0.4rem 0.7rem;\n    display: inline-block;\n  }\n\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { ListUL, ListLI } from \"./taglist-comp\"\nimport { Link } from \"gatsby\"\n\nclass TagList extends React.Component {\n  static staticProps = {\n    listArray: PropTypes.array,\n  }\n  static defaultProps = {\n    listArray: [],\n  }\n  render() {\n    const { listArray } = this.props\n    return (\n      <>\n        <ListUL>\n          {listArray.map((item, id) => {\n            return <ListLI key={id}><Link to={`/tags/${item}`}>#{item}</Link></ListLI>\n          })}\n        </ListUL>\n      </>\n    )\n  }\n}\n\nexport default TagList\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"@components/Layout\"\nimport SEO from \"@components/SEO\"\nimport TagList from \"@components/TagList\"\nimport Categoris from \"@containers/Categoris\"\n\nclass IndexPage extends React.Component {\n  render() {\n    const { location, tags, data } = this.props\n    const siteTitle = \"CHASING LIGHTS AND SHADOWS\"\n    const dataArray = data.allMdx.edges\n    let tagArrs = []\n    let oriTagArr = []\n    dataArray.forEach(item => {\n      let tagArr = item.node.frontmatter.tags\n      tagArr.forEach(it => {\n        oriTagArr.push(it)\n        if (tags === it) tagArrs.push(item)\n      })\n    })\n    const noRepectTagArr = Array.from(new Set(oriTagArr))\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO\n          title=\"Home\"\n          keywords={[\n            `mountain`,\n            `life`,\n            `photography`,\n            `blog`,\n            `gatsby`,\n            `javascript`,\n            `react`,\n            `js`,\n          ]}\n        />\n        <Categoris dataArray={tagArrs} tagName={tags}/>\n        <TagList listArray={noRepectTagArr}/>\n      </Layout>\n    )\n  }\n}\n\nexport const query = graphql`\n  query {\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          slug\n          frontmatter {\n            title\n            date\n            tags\n            categories\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n"],"sourceRoot":""}